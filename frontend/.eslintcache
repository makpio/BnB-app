[{"/home/pm/Desktop/github/BnB-app/frontend/src/index.js":"1","/home/pm/Desktop/github/BnB-app/frontend/src/App.js":"2","/home/pm/Desktop/github/BnB-app/frontend/src/reportWebVitals.js":"3","/home/pm/Desktop/github/BnB-app/frontend/src/redux/reducers/auth.js":"4","/home/pm/Desktop/github/BnB-app/frontend/src/routes.js":"5","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Layout.js":"6","/home/pm/Desktop/github/BnB-app/frontend/src/redux/actions/auth.js":"7","/home/pm/Desktop/github/BnB-app/frontend/src/redux/utility.js":"8","/home/pm/Desktop/github/BnB-app/frontend/src/redux/actions/actionsTypes.js":"9","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskListView.js":"10","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView.js":"11","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Signup.js":"12","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Login.js":"13","/home/pm/Desktop/github/BnB-app/frontend/src/components/Task.js":"14","/home/pm/Desktop/github/BnB-app/frontend/src/components/Tree.js":"15","/home/pm/Desktop/github/BnB-app/frontend/src/helpers/PrivateRoute.js":"16","/home/pm/Desktop/github/BnB-app/frontend/src/containers/AddTask.js":"17","/home/pm/Desktop/github/BnB-app/frontend/src/containers/EditTask.js":"18","/home/pm/Desktop/github/BnB-app/frontend/src/components/Form.js":"19","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView_copy.js":"20","/home/pm/Desktop/github/BnB-app/frontend/src/components/AddNode.js":"21"},{"size":822,"mtime":1610739713137,"results":"22","hashOfConfig":"23"},{"size":868,"mtime":1609965708696,"results":"24","hashOfConfig":"23"},{"size":356,"mtime":1609965491362,"results":"25","hashOfConfig":"23"},{"size":1050,"mtime":1610204434716,"results":"26","hashOfConfig":"23"},{"size":1080,"mtime":1610759060377,"results":"27","hashOfConfig":"23"},{"size":2211,"mtime":1610273089295,"results":"28","hashOfConfig":"23"},{"size":3024,"mtime":1610317111120,"results":"29","hashOfConfig":"23"},{"size":135,"mtime":1608574806496,"results":"30","hashOfConfig":"23"},{"size":160,"mtime":1609965491362,"results":"31","hashOfConfig":"23"},{"size":495,"mtime":1610758481022,"results":"32","hashOfConfig":"23"},{"size":5384,"mtime":1610758861980,"results":"33","hashOfConfig":"23"},{"size":4208,"mtime":1610758481022,"results":"34","hashOfConfig":"23"},{"size":2908,"mtime":1610755672080,"results":"35","hashOfConfig":"23"},{"size":1195,"mtime":1610758481022,"results":"36","hashOfConfig":"23"},{"size":1589,"mtime":1610757436193,"results":"37","hashOfConfig":"23"},{"size":461,"mtime":1610271067069,"results":"38","hashOfConfig":"23"},{"size":419,"mtime":1610740176619,"results":"39","hashOfConfig":"23"},{"size":937,"mtime":1610758988333,"results":"40","hashOfConfig":"23"},{"size":5507,"mtime":1610759054445,"results":"41","hashOfConfig":"23"},{"size":1400,"mtime":1610758481022,"results":"42","hashOfConfig":"23"},{"size":3547,"mtime":1610759009784,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1sudhcl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pm/Desktop/github/BnB-app/frontend/src/index.js",[],["94","95"],"/home/pm/Desktop/github/BnB-app/frontend/src/App.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/reportWebVitals.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/redux/reducers/auth.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/routes.js",["96","97"],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/Layout.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/redux/actions/auth.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/redux/utility.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/redux/actions/actionsTypes.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskListView.js",["98"],"import React from \"react\"\nimport axios from \"axios\"\n\nimport Tasks from \"../components/Task\"\nimport CustomForm from \"../components/Form\"\n\nclass TaskList extends React.Component {\n  state = {\n    tasks: [],\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/\").then((res) => {\n      this.setState({\n        tasks: res.data,\n      })\n      console.log(res.data)\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Tasks data={this.state.tasks} />\n      </div>\n    )\n  }\n}\n\nexport default TaskList\n","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView.js",["99","100","101"],"import React from 'react';\nimport axios from 'axios';\nimport { Button, Card, Space, Typography, Spin, Row, Col } from 'antd';\nimport { LoadingOutlined } from \"@ant-design/icons\"\nimport CustomForm from '../components/Form'\nimport CustomTree from '../components/Tree'\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\nconst { Title } = Typography;\n\n\nclass TaskDetail extends React.Component {\n\n    state = {\n        task: {}\n    }\n     myTreeData = [\n        {\n          name: \"Top Level\",\n          attributes: {\n            level: \"0\",\n            keyA: \"val A\",\n            keyB: \"val B\",\n            keyC: \"val C\",\n          },\n          children: [\n            {\n              name: \"Level 1: A\",\n             // rule: \"yes\",\n              attributes: {\n                level: \"1\",\n                keyA: \"val A\",\n                keyB: \"val BC\",\n                keyC: Boolean(1),\n              },\n              children: [\n                {\n                  name: \"Level 2: A\",\n                  attributes: {\n                    level: \"2\",\n                    keyA: \"val A\",\n                    keyB: \"val B\",\n                    keyC: \"val C\",\n                  },\n                },\n                {\n                  name: \"Level 2: B\",\n                  attributes: {\n                    level: \"2\",\n                    keyA: \"val A\",\n                    keyB: \"val B\",\n                    keyC: \"val C\",\n                  },\n                },\n              ],\n            },\n            {\n              name: \"Level 1: B\",\n              attributes: {\n                level: \"1\",\n                keyA: \"val A\",\n                keyB: \"val B\",\n                keyC: \"val C\",\n              },\n              children: [\n                {\n                  name: \"Level 2: C\",\n                  attributes: {\n                    level: \"2\",\n                    keyA: \"val A\",\n                    keyB: \"val B\",\n                    keyC: \"val C\",\n                  },\n                },\n                {\n                  name: \"Level 2: D\",\n                  attributes: {\n                    level: \"2\",\n                    keyA: \"val A\",\n                    keyB: \"val B\",\n                    keyC: \"val C\",\n                  },\n                },\n              ],\n            },\n          ],\n        },\n        \n      ]\n      \n    componentDidMount() {\n        const taskId = this.props.match.params.taskId;\n        axios.get(`http://localhost:8000/api/${taskId}`)\n        .then(res => {\n            this.setState({\n                task: res.data\n            });\n            console.log('task data', res.data);\n        })\n    }\n\n    handleDelete = (event) => {\n        const taskId = this.props.match.params.taskId;\n        axios.delete(`http://localhost:8000/api/${taskId}`);\n        this.props.history.push('/');\n    }\n    \n\n\n//<CustomTree tree={this.state.task.data}></CustomTree>\n    render() {\n        //let xd = JSON.stringify(this.myTreeData)\n        //let test = Object.values(this.myTreeData)\n        //let test = this.myTreeData\n        //console.log('myTree test', test[0].children[1].children[0])\n        //console.log('local storage', localStorage)\n        //let newNode = {name: \"Level3 A\", attributes: {level: 3}}\n        //var children = []\n        //test[0].children[1].children.push(children)\n        // let NodeGdzieDodajemy = test[0].children[1].children[0]\n        // if (!(\"children\" in NodeGdzieDodajemy)) {\n        //     NodeGdzieDodajemy['children'] = []\n        // }\n        // console.log('a co tu mamy: ', NodeGdzieDodajemy.children.length)\n         //spr czy istnieje - test dodawania do drzewa\n        \n        //test[0].children[1].children[1]['children'] = []\n        //NodeGdzieDodajemy.children.push({name: null, attributes: null})\n      //NodeGdzieDodajemy.children.push({name: \"Level3 B\", attributes: {level: 3, keyA: true}})\n\n        //NodeGdzieDodajemy.children.push({name: \"Level3 C\", attributes: {level: 3}})\n        // let xddd = JSON.stringify(test)\n        // console.log('xddd', this.state.data)\n        // console.log('data_string', JSON.stringify(this.state.task.data))\n        // console.log('data_obj', this.state.task.data)\n        // console.log('myTree_obj', this.myTreeData)\n        //  console.log('myTree_string xd', xd)\n\n        console.log(this.props.isAuthenticated)\n        console.log('xddd', this.state.task.data)\n        return (\n            \n            <div><Row type=\"flex\" justify=\"center\" align=\"middle\" style={{minHeight: '80vh'}}>\n            <Col span={14} style={{ verticalAlign: 'middle' }} >  <Card title={<Title level={2}>{this.state.task.name}</Title>}>\n                {this.state.task.data ? <div>\n                <Card title={this.state.task.username} subtitle=\"xd\">\n                    {this.state.task.description}\n                    \n                </Card>   \n                {/* <CustomTree data={this.state.task.data}>\n                </CustomTree> */}\n                \n        \n            <Button size=\"large\" type=\"primary\" htmlType=\"submit\" href={`/tasks/${this.state.task.id}/solve`}>\n                Solve\n            </Button></div> : <Spin indicator={antIcon} />}\n            </Card></Col></Row></div>\n          \n        )\n    }\n}\n//{this.state.task.username === localStorage.username || localStorage.username === \"admin\" ? ( ) : (null)}\nexport default TaskDetail;","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Signup.js",["102"],"import React from \"react\"\nimport { Form, Input, Button, Spin, Card, Row, Typography } from \"antd\"\n\nimport { UserOutlined, LockOutlined, MailOutlined, LoadingOutlined } from \"@ant-design/icons\"\n\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport * as actions from \"../redux/actions/auth\"\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\nconst { Title } = Typography;\nclass RegistrationForm extends React.Component {\n    \n  render() {\n    if(localStorage.getItem(\"token\") && this.props.error === null) {\n        this.props.history.push(\"/tasks\")\n    }\n\n    let errorMessage = null\n    if (this.props.error) {\n      //errorMessage = <p>Login failed: {this.props.error.message}</p>\n      window.confirm('Sign up failed:' + this.props.error.message)\n    }\n    return (\n \n      <div> <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{minHeight: '80vh'}}>\n      <Card title={<Title level={2}>Sign Up</Title>} style={{ verticalAlign: 'middle' }} >\n      {this.props.loading ? (\n        <Spin indicator={antIcon} />\n      ) :\n\n        <Form\n          name=\"RegisterForm\"\n          onFinish={(values, err) => {\n            if (!err) {\n              this.props.onSignup(values.username, values.email, values.password1, values.password2)\n            }\n           \n          }}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Username!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\",\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\",\n              },\n            ]}\n          >\n            <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"E-mail\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password1\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password2\"\n            dependencies={[\"password1\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"Please confirm your password!\",\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"password1\") === value) {\n                    return Promise.resolve()\n                  }\n\n                  return Promise.reject(\"The two passwords that you entered do not match!\")\n                },\n              }),\n            ]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password confirmation\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: \"10px\" }}>\n              Sign Up\n            </Button>\n            Or\n            <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\n              {\" \"}\n              Login\n            </NavLink>\n          </Form.Item>\n        </Form>}\n      </Card></Row></div> \n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSignup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm)\n","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Login.js",["103"],"import React from \"react\"\nimport { Form, Input, Button, Spin, Card, Row, Typography } from \"antd\"\nimport { UserOutlined, LockOutlined, LoadingOutlined } from \"@ant-design/icons\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nimport * as actions from \"../redux/actions/auth\"\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\nconst { Title } = Typography;\n\nclass LoginForm extends React.Component {\n    \n  render() {\n    if(localStorage.getItem(\"token\") && this.props.error === null) {\n        this.props.history.push(\"/tasks\")\n    }\n\n    let errorMessage = null\n    if (this.props.error) {\n      //errorMessage = <p>Login failed: {this.props.error.message}</p>\n      window.confirm('Login failed:' + this.props.error.message)\n    }\n//{errorMessage}\n    return (\n     <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{minHeight: '80vh'}}>\n          <Card title={<Title level={2}>Log In</Title>} style={{ verticalAlign: 'middle' }} >\n        \n        {this.props.loading ? (\n          <Spin indicator={antIcon} />\n        ) : (\n          <Form\n            name=\"LoginForm\"\n            onFinish={(values, err) => {\n              if (!err) {\n                this.props.onAuth(values.userName, values.password)\n              }\n              \n            }}\n          >\n            <Form.Item\n              name=\"userName\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Username!\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Password!\",\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: \"10px\" }}>\n                Log In\n              </Button>\n              or\n              <NavLink style={{ marginLeft: \"10px\" }} to=\"/signup/\">\n                Register\n              </NavLink>\n            </Form.Item>\n          </Form>\n        )}\n      </Card></Row>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password)),\n  }\n}\n\n//LoginForm = Form.onFieldsChange(LoginForm);\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","/home/pm/Desktop/github/BnB-app/frontend/src/components/Task.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/components/Tree.js",["104","105","106","107","108","109","110"],"import React from \"react\"\nimport Tree from \"react-d3-tree\"\nimport { Row, Col,  Form, Input, Button, Spin } from \"antd\"\n\nimport { LoadingOutlined } from \"@ant-design/icons\"\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n\n  \n//initialDepth = \"0\" set which deepth we need\nclass CustomTree extends React.Component {\n\n  render() {\n\n    return (\n        \n      <div id=\"treeWrapper\" style={{height: '40em'}}>\n     \n        <Tree \n          data={this.props.data} \n          orientation=\"vertical\"\n          //onClick={this.handleNodeClick}\n          onNodeToggle={null}\n          onNodeClick={this.props.onNodeClick}\n          initialDepth = \"2\"\n          collapsible={false}\n                  \n        /> \n       \n      </div>\n    )\n  }\n}\n// <div id=\"treeWrapper\" style={{ width: \"40em\", height: \"40em\"}}>\nexport default CustomTree\n//nodeToggleConditions={(node) => node.level <= this.initialDepth}\n// renderCustomNodeElement={(rd3tProps) =>\n//     renderNodeWithCustomEvents({ ...rd3tProps, handleNodeClick })}\n\n// const renderNodeWithCustomEvents = ({\n//     nodeDatum,\n//     toggleNode,\n//     handleNodeClick\n//   }) => (\n//     <g>\n//       <circle r=\"15\" onClick={() => handleNodeClick(nodeDatum)} />\n//       <text fill=\"black\" strokeWidth=\"1\" x=\"20\" onClick={toggleNode}>\n//         {nodeDatum.name} {nodeDatum.attributes.isClosed}{nodeDatum.attributes.keyA}\n//       </text>\n      \n\n//     </g>\n// );\n\n// const handleNodeClick = (nodeDatum) => {\n//     window.alert(\n//       nodeDatum.children ? \"Clicked a branch node\" : \"Clicked a leaf node.\"\n//     );\n//   };","/home/pm/Desktop/github/BnB-app/frontend/src/helpers/PrivateRoute.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/AddTask.js",["111","112","113","114"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Button, Card, Space } from \"antd\"\n\nimport CustomForm from \"../components/Form\"\n\nclass AddTaskForm extends React.Component {\n  state = {\n    task: {},\n  }\n\n  render() {\n    return (\n      <div>\n       \n        <CustomForm requestType=\"post\" taskId={null} buttonName=\"Add\" task={this.state.task} />\n       \n      </div>\n    )\n  }\n}\n\nexport default AddTaskForm\n","/home/pm/Desktop/github/BnB-app/frontend/src/containers/EditTask.js",["115","116","117"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Button, Card, Space } from \"antd\"\n\nimport CustomForm from \"../components/Form\"\n\nclass EditTaskForm extends React.Component {\n  state = {\n    task: {},\n  }\n\n  componentDidMount() {\n    const taskId = this.props.match.params.taskId\n    axios.get(`http://localhost:8000/api/${taskId}`).then((res) => {\n      this.setState({\n        task: res.data,\n      })\n      console.log(res.data)\n    })\n  }\n\n  handleDelete = (event) => {\n    const taskId = this.props.match.params.taskId\n    axios.delete(`http://localhost:8000/api/${taskId}`)\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    if (this.state.task.data === null)\n            return <div>loading</div>\n    return (\n      <div>\n       \n        <CustomForm requestType=\"pull\" taskId={this.props.match.params.taskId} buttonName=\"Edit\" task={this.state.task}/>\n        \n      </div>\n    )\n  }\n}\n\nexport default EditTaskForm\n","/home/pm/Desktop/github/BnB-app/frontend/src/components/Form.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView_copy.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/components/AddNode.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":22},{"ruleId":"122","severity":1,"message":"126","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":19},{"ruleId":"122","severity":1,"message":"127","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":18},{"ruleId":"122","severity":1,"message":"128","line":3,"column":24,"nodeType":"124","messageId":"125","endLine":3,"endColumn":29},{"ruleId":"122","severity":1,"message":"127","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":18},{"ruleId":"122","severity":1,"message":"129","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":18},{"ruleId":"122","severity":1,"message":"130","line":18,"column":9,"nodeType":"124","messageId":"125","endLine":18,"endColumn":21},{"ruleId":"122","severity":1,"message":"130","line":19,"column":9,"nodeType":"124","messageId":"125","endLine":19,"endColumn":21},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"132","line":3,"column":15,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"133","line":3,"column":21,"nodeType":"124","messageId":"125","endLine":3,"endColumn":25},{"ruleId":"122","severity":1,"message":"134","line":3,"column":27,"nodeType":"124","messageId":"125","endLine":3,"endColumn":32},{"ruleId":"122","severity":1,"message":"135","line":3,"column":34,"nodeType":"124","messageId":"125","endLine":3,"endColumn":40},{"ruleId":"122","severity":1,"message":"136","line":3,"column":42,"nodeType":"124","messageId":"125","endLine":3,"endColumn":46},{"ruleId":"122","severity":1,"message":"137","line":7,"column":7,"nodeType":"124","messageId":"125","endLine":7,"endColumn":14},{"ruleId":"122","severity":1,"message":"138","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"135","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":16},{"ruleId":"122","severity":1,"message":"139","line":3,"column":18,"nodeType":"124","messageId":"125","endLine":3,"endColumn":22},{"ruleId":"122","severity":1,"message":"128","line":3,"column":24,"nodeType":"124","messageId":"125","endLine":3,"endColumn":29},{"ruleId":"122","severity":1,"message":"135","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":16},{"ruleId":"122","severity":1,"message":"139","line":3,"column":18,"nodeType":"124","messageId":"125","endLine":3,"endColumn":22},{"ruleId":"122","severity":1,"message":"128","line":3,"column":24,"nodeType":"124","messageId":"125","endLine":3,"endColumn":29},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'TaskDetailCopy' is defined but never used.","Identifier","unusedVar","'AddNodeForm' is defined but never used.","'CustomForm' is defined but never used.","'Space' is defined but never used.","'CustomTree' is defined but never used.","'errorMessage' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Spin' is defined but never used.","'antIcon' is assigned a value but never used.","'axios' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]