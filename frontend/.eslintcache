[{"/home/pm/Desktop/github/BnB-app/frontend/src/index.js":"1","/home/pm/Desktop/github/BnB-app/frontend/src/App.js":"2","/home/pm/Desktop/github/BnB-app/frontend/src/reportWebVitals.js":"3","/home/pm/Desktop/github/BnB-app/frontend/src/routes.js":"4","/home/pm/Desktop/github/BnB-app/frontend/src/containers/Layout.js":"5","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskListView.js":"6","/home/pm/Desktop/github/BnB-app/frontend/src/components/Task.js":"7","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView.js":"8","/home/pm/Desktop/github/BnB-app/frontend/src/components/Form.js":"9"},{"size":500,"mtime":1608410576654,"results":"10","hashOfConfig":"11"},{"size":489,"mtime":1608473445397,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608407643291,"results":"13","hashOfConfig":"11"},{"size":368,"mtime":1608492102699,"results":"14","hashOfConfig":"11"},{"size":1141,"mtime":1608492575569,"results":"15","hashOfConfig":"11"},{"size":1385,"mtime":1608543512429,"results":"16","hashOfConfig":"11"},{"size":874,"mtime":1608492659787,"results":"17","hashOfConfig":"11"},{"size":1385,"mtime":1608543761784,"results":"18","hashOfConfig":"11"},{"size":1704,"mtime":1608511147334,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1sudhcl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/home/pm/Desktop/github/BnB-app/frontend/src/index.js",[],["41","42"],"/home/pm/Desktop/github/BnB-app/frontend/src/App.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/reportWebVitals.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/routes.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/Layout.js",["43"],"import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\n\n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n        <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                <Menu.Item key=\"1\">nav 1</Menu.Item>\n                <Menu.Item key=\"2\">nav 2</Menu.Item>\n                <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n            <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{background: '#fff', padding:24, minHeight: 280 }}>\n              {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n      </Layout>\n    );\n}\n\nexport default CustomLayout;\n\n","/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskListView.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/components/Task.js",[],"/home/pm/Desktop/github/BnB-app/frontend/src/containers/TaskDetailView.js",["44"],"/home/pm/Desktop/github/BnB-app/frontend/src/components/Form.js",["45","46","47"],"import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nimport axios from 'axios';\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n\n   \n   onFinish = (values, requestType, taskId, buttonName) => {\n          const name = values.name;\n          console.log(\"Success:\", name);\n\n          if (requestType == 'post') {\n                axios.post(\" http://localhost:8000/api/\", {\n                    name: name\n                })\n                .then(res => console.log(res))\n                .catch(err => console.error(err));\n                \n            }\n          if (requestType == 'put') {\n                axios.put(`http://localhost:8000/api/${taskId}/`, {\n                    name: name\n                })\n                .then(res => console.log(res))\n                .catch(err => console.error(err));\n                         \n            }\n\n        };\n      \n    onFinishFailed = (errorInfo) => {\n          console.log(\"Failed:\", errorInfo);\n        };\n\n    render() {\n        return (\n            <Form\n            name=\"basic\"\n            onFinish={(values) => this.onFinish(\n                values,\n                this.props.requestType,\n                this.props.taskId,\n                this.props.buttonName )}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item label=\"name\" name=\"name\">\n              <Input name=\"name\" placeholder=\"Enter a Title\" />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                {this.props.buttonName}\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n    }     \n}\n\nexport default CustomForm;\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":16,"nodeType":"54","messageId":"55","endLine":3,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":6,"column":7,"nodeType":"54","messageId":"55","endLine":6,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":15,"column":27,"nodeType":"60","messageId":"61","endLine":15,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":23,"column":27,"nodeType":"60","messageId":"61","endLine":23,"endColumn":29},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Tasks' is defined but never used.","'FormItem' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]